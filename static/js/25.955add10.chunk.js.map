{"version":3,"sources":["views/dashboard/dashboardHelper.js","views/dashboard/Dashboard.js"],"names":["countDelegations","registrationData","i","count","length","type","countTotalDelegates","Number","delegates","getIncome","settings","undefined","multiplier","schoolfee","window","earlydelfee","earlyschoolfee","regdelfee","regschoolfee","latedelfee","lateschoolfee","toFixed","getCommitteeList","committeeData","committeeList","abbreviation","committee","getCommitteeValues","field","ans","temp","positions","split","assignments","j","calculateConferenceCapacity","assigned","reduce","a","b","total","isNaN","Math","round","calculatePaymentCompletion","status","calculateDelegationBalance","allotmentData","balanced","l","assignedPositions","allottedPositions","k","delegation","delegationId","_id","m","allotments","arr","countCommitteeCategory","category","countRegistrationTimeWindow","countDelegatesByCategory","countDelegatesByType","Dashboard","user","useAuth0","isAuthenticated","data","setData","useState","isLoading","setIsLoading","async","fetchData","sub","then","res","JSON","stringify","prevState","getData","_jsx","children","_jsxs","_Fragment","CRow","CCol","xs","sm","lg","CWidgetIcon","text","header","color","iconPadding","CIcon","width","name","CCardGroup","CCard","CCardHeader","CCardBody","CChartBar","datasets","label","backgroundColor","labels","options","tooltips","enabled","scales","yAxes","ticks","beginAtZero","CWidgetProgress","inverse","variant","value","footer","columns","className","CChartDoughnut","legend","position"],"mappings":"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","file":"static/js/25.955add10.chunk.js","sourcesContent":["\r\nexport function countDelegations(registrationData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < registrationData.length; i++) {\r\n        if (registrationData[i].type !== 'Independent') {\r\n            count = count + 1\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\nexport function countTotalDelegates(registrationData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < registrationData.length; i++) {\r\n        count = count + Number(registrationData[i].delegates)\r\n    }\r\n    return count\r\n}\r\n\r\nexport function getIncome(registrationData, settings) {\r\n    if (settings !== undefined) {\r\n        let count = 0;\r\n\r\n        let i;\r\n        for (i = 0; i < registrationData.length; i++) {\r\n            let multiplier = 0;\r\n            let schoolfee = 0;\r\n\r\n            if (registrationData[i].window === \"Early\") {\r\n                multiplier = Number(settings.earlydelfee)\r\n                schoolfee = Number(settings.earlyschoolfee)\r\n            } else if (registrationData[i].window === \"Regular\") {\r\n                multiplier = Number(settings.regdelfee)\r\n                schoolfee = Number(settings.regschoolfee)\r\n            } else if (registrationData[i].window === \"Late\") {\r\n                multiplier = Number(settings.latedelfee)\r\n                schoolfee = Number(settings.lateschoolfee)\r\n            }\r\n\r\n            count = count + (Number(registrationData[i].delegates) * multiplier)\r\n\r\n            if (registrationData[i].type === 'Delegation') {\r\n                count = count + schoolfee\r\n            }\r\n        }\r\n\r\n        count = count.toFixed(2)\r\n\r\n        return count\r\n    } else {\r\n        return 0.00\r\n    }\r\n}\r\n\r\nexport function getCommitteeList(committeeData) {\r\n    let committeeList = []\r\n\r\n    let i;\r\n    for (i = 0; i < committeeData.length; i++) {\r\n        if (committeeData[i].abbreviation === '') {\r\n            committeeList[i] = committeeData[i].committee\r\n        } else {\r\n            committeeList[i] = committeeData[i].abbreviation\r\n        }\r\n    }\r\n    return committeeList\r\n}\r\n\r\nexport function getCommitteeValues(field, committeeData) {\r\n    let ans = []\r\n\r\n    let i;\r\n    for (i = 0; i < committeeData.length; i++) {\r\n        let temp;\r\n        if (field === 'total') {\r\n            temp = committeeData[i].positions.split(\",\")\r\n        } else if (field === 'assigned') {\r\n            temp = committeeData[i].assignments.split(\",\")\r\n        }\r\n\r\n        let count = 0\r\n\r\n        let j;\r\n        for (j = 0; j < temp.length; j++) {\r\n            if (temp[j] !== '') {\r\n                count = count + 1\r\n            }\r\n        }\r\n\r\n        ans[i] = count;\r\n    }\r\n    return ans\r\n}\r\n\r\nexport function calculateConferenceCapacity(committeeData) {\r\n    let assigned = getCommitteeValues('assigned', committeeData).reduce(function (a, b) { return a + b; }, 0)\r\n    let total = getCommitteeValues('total', committeeData).reduce(function (a, b) { return a + b; }, 0)\r\n\r\n    return isNaN(Math.round((assigned / total) * 100)) ? 0 : Math.round((assigned / total) * 100)\r\n}\r\n\r\nexport function calculatePaymentCompletion(registrationData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < registrationData.length; i++) {\r\n        if (registrationData[i].status === 'Paid') {\r\n            count = count + 1\r\n        }\r\n    }\r\n\r\n    return isNaN(Math.round((count / registrationData.length) * 100)) ? 0 : Math.round((count / registrationData.length) * 100)\r\n}\r\n\r\nexport function calculateDelegationBalance(registrationData, committeeData, allotmentData) {\r\n    let balanced = 0\r\n\r\n    let i;\r\n    for (i = 0; i < registrationData.length; i++) {\r\n        let assignedPositions = 0\r\n        let allottedPositions = 0\r\n\r\n        let j;\r\n        for (j = 0; j < committeeData.length; j++) {\r\n            let assignments = committeeData[j].assignments.split(\",\")\r\n\r\n            let k;\r\n            for (k = 0; k < assignments.length; k++) {\r\n                if (assignments[k] === registrationData[i].delegation) {\r\n                    assignedPositions = assignedPositions + 1\r\n                }\r\n            }\r\n        }\r\n\r\n        let l;\r\n        for (l = 0; l < allotmentData.length; l++) {\r\n            if (allotmentData[l].delegationId === registrationData[i]._id) {\r\n                let allotments = allotmentData[l].allotments.split(\",\")\r\n\r\n                let m;\r\n                for (m = 0; m < allotments.length; m++) {\r\n                    let arr = allotments[m].split(\":\")\r\n\r\n                    if (arr[1] !== undefined) {\r\n                        allottedPositions = allottedPositions + Number(arr[1])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (assignedPositions - allottedPositions === 0) {\r\n            balanced = balanced + 1\r\n        }\r\n    }\r\n\r\n    return isNaN(Math.round((balanced / registrationData.length) * 100)) ? 0 : Math.round((balanced / registrationData.length) * 100)\r\n}\r\n\r\nexport function countCommitteeCategory(category, committeeData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < committeeData.length; i++) {\r\n        if (committeeData[i].category === category) {\r\n            count = count + 1\r\n        }\r\n    }\r\n\r\n    return count\r\n}\r\n\r\nexport function countRegistrationTimeWindow(window, registrationData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < registrationData.length; i++) {\r\n        if (registrationData[i].window === window) {\r\n            count = count + 1\r\n        }\r\n    }\r\n\r\n    return count\r\n}\r\n\r\nexport function countDelegatesByCategory(category, committeeData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < committeeData.length; i++) {\r\n        if (committeeData[i].category === category) {\r\n            let temp = committeeData[i].assignments.split(\",\")\r\n\r\n            let j;\r\n            for (j = 0; j < temp.length; j++) {\r\n                if (temp[j] !== '') {\r\n                    count = count + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return count\r\n}\r\n\r\nexport function countDelegatesByType(type, committeeData, registrationData) {\r\n    let count = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < committeeData.length; i++) {\r\n        let temp = committeeData[i].assignments.split(\",\")\r\n\r\n        let j;\r\n        for (j = 0; j < temp.length; j++) {\r\n            let k;\r\n            for (k = 0; k < registrationData.length; k++) {\r\n                if (registrationData[k].delegation === temp[j]) {\r\n                    if (registrationData[k].type === type) {\r\n                        count = count + 1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return count\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CWidgetIcon,\r\n  CWidgetProgress\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartDoughnut,\r\n} from '@coreui/react-chartjs'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport {\r\n  countDelegations, countTotalDelegates,\r\n  getIncome, getCommitteeList, getCommitteeValues,\r\n  calculateConferenceCapacity, calculatePaymentCompletion, calculateDelegationBalance,\r\n  countCommitteeCategory, countRegistrationTimeWindow, countDelegatesByCategory, countDelegatesByType\r\n} from './dashboardHelper.js'\r\n\r\nimport fetchData from 'src/data/LiveData/FetchData'\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useAuth0()\r\n  const { isAuthenticated } = useAuth0()\r\n\r\n  const [data, setData] = useState({\r\n    committeeData: [],\r\n    registrationData: [],\r\n    settings: [],\r\n    allotmentData: []\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  async function getData() {\r\n    await fetchData('/api/get/committee', user.sub).then((res) => {\r\n      if (JSON.stringify(res) !== JSON.stringify(data.committeeData)) {\r\n        setData(prevState => {\r\n          return { ...prevState, committeeData: res }\r\n        })\r\n      }\r\n    })\r\n\r\n    await fetchData('/api/get/registrationData', user.sub).then((res) => {\r\n      if (JSON.stringify(res) !== JSON.stringify(data.registrationData)) {\r\n        setData(prevState => {\r\n          return { ...prevState, registrationData: res }\r\n        })\r\n      }\r\n    })\r\n\r\n    await fetchData(\"/api/get/settings\", user.sub).then((res) => {\r\n      if (JSON.stringify(res[res.length - 1]) !== JSON.stringify(data.settings)) {\r\n        setData(prevState => {\r\n          return { ...prevState, settings: res[res.length - 1] }\r\n        })\r\n      }\r\n    })\r\n\r\n    await fetchData(\"/api/get/allotments\", user.sub, 'delegation').then((res) => {\r\n      if (JSON.stringify(res) !== JSON.stringify(data.allotmentData)) {\r\n        setData(prevState => {\r\n          return { ...prevState, allotmentData: res }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    getData().then(() => {\r\n      if (isLoading) {\r\n        setIsLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  return !isLoading ? (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"committees\" header={\"\" + data.committeeData.length} color=\"primary\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-people\" />\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"delegations\" header={\"\" + countDelegations(data.registrationData)} color=\"primary\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-people\" />\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"delegates\" header={\"\" + countTotalDelegates(data.registrationData)} color=\"primary\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-user\" />\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"income\" header={\"$\" + getIncome(data.registrationData, data.settings)} color=\"primary\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-dollar\" />\r\n          </CWidgetIcon>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CCardGroup>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Committee Capacity\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CChartBar\r\n              datasets={[\r\n                {\r\n                  label: 'Assigned Delegates',\r\n                  backgroundColor: '#321fdb',\r\n                  data: getCommitteeValues('assigned', data.committeeData)\r\n                },\r\n                {\r\n                  label: 'Total Positions',\r\n                  backgroundColor: '#ced2d8',\r\n                  data: getCommitteeValues('total', data.committeeData)\r\n                }\r\n              ]}\r\n              labels={getCommitteeList(data.committeeData)}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true\r\n                },\r\n                scales: {\r\n                  yAxes: [{\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    }\r\n                  }]\r\n                }\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCardGroup>\r\n\r\n      <br></br>\r\n\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetProgress inverse color=\"primary\" variant=\"inverse\" value={calculateConferenceCapacity(data.committeeData)} header={calculateConferenceCapacity(data.committeeData) + \"% Conference Capacity\"} footer=\"Assigned Positions / Total Positions\" />\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetProgress inverse color=\"primary\" variant=\"inverse\" value={calculatePaymentCompletion(data.registrationData)} header={calculatePaymentCompletion(data.registrationData) + \"% Payment Completion\"} footer=\"Payments Recieved / Payments Expected\" />\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetProgress inverse color=\"primary\" variant=\"inverse\" value={calculateDelegationBalance(data.registrationData, data.committeeData, data.allotmentData)} header={calculateDelegationBalance(data.registrationData, data.committeeData, data.allotmentData) + \"% Delegation Balance\"} footer=\"Balanced Delegations / Total Delegations\" />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CCardGroup columns className=\"cols-2\" >\r\n        <CCard>\r\n          <CCardHeader>\r\n            Committee Spread\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CChartDoughnut\r\n              datasets={[\r\n                {\r\n                  backgroundColor: [\r\n                    '#03254c',\r\n                    '#1167b1',\r\n                    '#2a9df4',\r\n                    '#d0efff'\r\n                  ],\r\n                  data: [countCommitteeCategory('General Assembly', data.committeeData), countCommitteeCategory('Specialized Agency', data.committeeData), countCommitteeCategory('Crisis Committee', data.committeeData), countCommitteeCategory('Other', data.committeeData)]\r\n                }\r\n              ]}\r\n              labels={['General Assemblies', 'Specialized Agencies', 'Crisis Committees', 'Other']}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Registration Time Window Spread\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CChartDoughnut\r\n              datasets={[\r\n                {\r\n                  backgroundColor: [\r\n                    '#03254c',\r\n                    '#1167b1',\r\n                    '#2a9df4'\r\n                  ],\r\n                  data: [countRegistrationTimeWindow('Early', data.registrationData), countRegistrationTimeWindow('Regular', data.registrationData), countRegistrationTimeWindow('Late', data.registrationData)]\r\n                }\r\n              ]}\r\n              labels={['Early Registration', 'Regular Registration', 'Late Registration']}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCardGroup>\r\n\r\n      <CCardGroup columns className=\"cols-2\" >\r\n        <CCard>\r\n          <CCardHeader>\r\n            Delegate Distribution by Committee Type\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CChartDoughnut\r\n              datasets={[\r\n                {\r\n                  backgroundColor: [\r\n                    '#03254c',\r\n                    '#1167b1',\r\n                    '#2a9df4',\r\n                    '#d0efff'\r\n                  ],\r\n                  data: [countDelegatesByCategory('General Assembly', data.committeeData), countDelegatesByCategory('Specialized Agency', data.committeeData), countDelegatesByCategory('Crisis Committee', data.committeeData), countDelegatesByCategory('Other', data.committeeData)]\r\n                }\r\n              ]}\r\n              labels={['General Assemblies', 'Specialized Agencies', 'Crisis Committees', 'Other']}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Delegate Distribution by Delegation Type\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CChartDoughnut\r\n              datasets={[\r\n                {\r\n                  backgroundColor: [\r\n                    '#03254c',\r\n                    '#1167b1'\r\n                  ],\r\n                  data: [countDelegatesByType('Delegation', data.committeeData, data.registrationData), countDelegatesByType('Independent', data.committeeData, data.registrationData)]\r\n                }\r\n              ]}\r\n              labels={['Delegation', 'Independent']}\r\n              options={{\r\n                tooltips: {\r\n                  enabled: true\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCardGroup>\r\n    </>\r\n  ) : (<p>Waiting for Data...</p>)\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}